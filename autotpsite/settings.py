"""
Django settings for autotpsite project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-w@&_tk7rk%ih=xy04*#^3=d1=y-(xv))#t#c09b4f9==m#0bld'

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = ['*'] #host白名单，不填默认只能本机通过127.0.0.1访问服务器
# DEBUG = False #生产环境设置False

# ALLOWED_HOSTS = []
DEBUG = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sqtp',
    'rest_framework', # django-rf
    'drf_yasg'  # API文档生成器
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'autotpsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'autotpsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# 数据库
DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    'default': {
            'ENGINE': 'django.db.backends.mysql', # 引擎
            'NAME': 'autotpsite',
            'USER': 'root',
            'PASSWORD': '111111',
            'HOST': '127.0.0.1',
            'PORT': '3306',
            'TEST':{                     # 表示单元测试创建的数据库字符串编码
                'CHARSET': 'utf8',
                'COLLATION': 'utf8_general_ci',  # 字符串的类型
            }
        }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# 前端启动的地址  http://127.0.0.1:8000/index.html    账号密码 user1 123456

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# rest框架配置
REST_FRAMEWORK = {
    # 默认的渲染器
    'DEFAULT_RENDERER_CLASSES': (
    # 'rest_framework.renderers.JSONRenderer', #json格式的渲染器
    # 'rest_framework.renderers.BrowsableAPIRenderer', #网页格式的渲染器
    'utils.renderers.MyRenderer', # 自定义的渲染器
                    ),
    #异常处理模块
    'EXCEPTION_HANDLER':'utils.exception.my_exception_handler',
    #全局认证模块 所有接口都会判断是否用户已经登陆了
    #  #全局认证模块--如果需要生效需要和权限模块一起配置才会生效   【发令牌】
    'DEFAULT_AUTHENTICATION_CLASSES':(
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    #全局权限模块  # 模块和权限是搭配使用的  【检查令牌】
    'DEFAULT_PERMISSION_CLASSES':(
        'rest_framework.permissions.IsAuthenticated',
    ),
    # 全局默认分页
    # 'DEFAULT_PAGINATION_CLASS':'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_PAGINATION_CLASS':'sqtp.pagination.MyPageNumberPagination',
    'PAGE_SIZE':10
}

# 告诉Django，使用这个表作为 系统的 user表
AUTH_USER_MODEL = 'sqtp.User'

